name: Main CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'LICENSE'
      - 'NOTICE'
      - '**.md'
      - '!site/**'
      - '.github/dependabot.yml'
      - '.github/workflows/release*.yml'
      - '.github/workflows/check*.yml'
      - '.idea/**'
      - '.editorconfig'

jobs:
  java:
    name: Java/Maven
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup runner
      uses: ./.github/actions/setup-runner
    - name: Setup Java, Maven
      uses: ./.github/actions/dev-tool-java
      with:
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

    - name: Build with Maven
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_ACCESS_ID }}
        MAVEN_OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        SPARK_LOCAL_IP: localhost
      if: ${{ env.MAVEN_USERNAME }}
      run: ./mvnw --batch-mode --threads 1C deploy -Pcode-coverage,release -DdeployAtEnd=true -Dtest.log.level=WARN

    - name: Build with Maven (Fork)
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_ACCESS_ID }}
        SPARK_LOCAL_IP: localhost
      if: ${{ ! env.MAVEN_USERNAME }}
      run: ./mvnw --batch-mode --threads 1C install -Pcode-coverage,release -DskipGpg -Dtest.log.level=WARN

    - name: Capture Results
      uses: ./.github/actions/ci-results

    - name: Run OWASP Check
      run: |
        ./mvnw dependency-check:aggregate -DskipTests -Powasp-dependency-check
    - name: Upload OWASP Report
      uses: actions/upload-artifact@v2
      with:
        name: owasp-report
        path: |
          target/dependency-check-report.html

  native:
    name: Java/Maven/Native
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Maven, Gradle
        uses: ./.github/actions/dev-tool-java

      - name: Build with Maven
        run: ./mvnw --batch-mode --threads 1C install -DskipTests -am -pl :nessie-quarkus -pl :nessie-lambda

      - name: Test native with Maven
        run: |
          ./mvnw --batch-mode install -Pnative,docker -Dtest.log.level=WARN -Dquarkus.native.native-image-xmx=6g -pl :nessie-quarkus -pl :nessie-lambda

      - name: Push Docker images
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        if: ${{ env.DOCKER_TOKEN }}
        run: |
          echo '${{ secrets.DOCKER_TOKEN }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin
          docker images --filter 'reference=projectnessie/nessie' --format '{{.ID}}\t{{.Tag}}' |
          while read IMAGE_ID IMAGE_TAG; do
            docker tag "$IMAGE_ID" "projectnessie/nessie-unstable:${IMAGE_TAG%-snapshot}"
            docker push "projectnessie/nessie-unstable:${IMAGE_TAG%-snapshot}"
          done

  jackson-tests:
    name: Jackson Integration Tests
    needs: java
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      # note the big include entry in matrix is used to ensure we get human readable names for the jobs
      matrix:
        include:
          - jackson-version: 2.6.7
            target-library: Spark 2.4.4
            java-version: 11
          - jackson-version: 2.10.0
            target-library: Spark 3.0.1
            java-version: 11
          - jackson-version: 2.11.4
            target-library: Spark 3.0.1
            java-version: 11
          - jackson-version: 2.12.5
            target-library: Spark 3.0.1
            java-version: 11
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java, Maven, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}
      - name: Jackson Integration Tests ${{ matrix.target-library }}
        run: ./mvnw --batch-mode verify -pl :nessie-client -am -Pjackson-tests -Djackson.test.version=${{ matrix.jackson-version }} -Dtest.log.level=WARN

  python:
    name: Python
    runs-on: ubuntu-latest
    env:
      working-directory: ./python
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: ./.github/actions/dev-tool-python
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test with tox
      run: tox
      working-directory: ${{env.working-directory}}
    - uses: codecov/codecov-action@v1
      with:
        flags: python
